Version 4.0 HI-TECH Software Intermediate Code
"15 arm_fsm.c
[; ;arm_fsm.c: 15: static ArmState current_state, next_state = IDLE;
[c E36 0 1 2 3 4 5 6 7 8 9 10 11 12 13 .. ]
[n E36 . IDLE PICKUP MAGNET_ON MOVE_UP_DOCK MIDDLE1 MIDDLE2 ROTATE_BOARD BOAT_ROTATE PLACEMENT MAGNET_OFF WAIT MIDDLE3 ROTATE_DOCK RETURN  ]
"16
[; ;arm_fsm.c: 16: static ArmMode arm_mode = PLACE;
[c E52 0 1 .. ]
[n E52 . PLACE REMOVE  ]
"36 ./servo.h
[; ;./servo.h: 36: void initServo();
[v _initServo `(v ~T0 @X0 0 e? ]
[v F84 `(v ~T0 @X0 0 tf ]
"280 ./mcc_generated_files/timer/tmr0.h
[; ;./mcc_generated_files/timer/tmr0.h: 280: void TMR0_OverflowCallbackRegister(void (* CallbackHandler)(void));
[v _TMR0_OverflowCallbackRegister `(v ~T0 @X0 0 ef1`*F84 ]
"40 ./arm_fsm.h
[; ;./arm_fsm.h: 40: void delay();
[v _delay `(v ~T0 @X0 0 e? ]
[v F144 `(v ~T0 @X0 0 tf ]
"195 ./mcc_generated_files/timer/tmr0.h
[; ;./mcc_generated_files/timer/tmr0.h: 195: void TMR0_Stop(void);
[v _TMR0_Stop `(v ~T0 @X0 0 ef ]
"186
[; ;./mcc_generated_files/timer/tmr0.h: 186: void TMR0_Start(void);
[v _TMR0_Start `(v ~T0 @X0 0 ef ]
"40 ./servo.h
[; ;./servo.h: 40: _Bool servoMovement();
[v _servoMovement `(a ~T0 @X0 0 e? ]
"35 ./boat_control.h
[; ;./boat_control.h: 35: const uint8_t* get_docking_servo_angles(uint8_t boat_id);
[v _get_docking_servo_angles `(*Cuc ~T0 @X0 0 ef1`uc ]
"38 ./servo.h
[; ;./servo.h: 38: void move_servo_to_angles(const uint8_t* angles);
[v _move_servo_to_angles `(v ~T0 @X0 0 ef1`*Cuc ]
"33
[; ;./servo.h: 33: void enableMagnet();
[v _enableMagnet `(v ~T0 @X0 0 e? ]
"35
[; ;./servo.h: 35: uint16_t calculateAngle(uint8_t angleDeg);
[v _calculateAngle `(us ~T0 @X0 0 ef1`uc ]
"41
[; ;./servo.h: 41: uint16_t getAngle(uint8_t i);
[v _getAngle `(us ~T0 @X0 0 ef1`uc ]
"39
[; ;./servo.h: 39: void move_servo_to_int(const uint16_t* intAngles);
[v _move_servo_to_int `(v ~T0 @X0 0 ef1`*Cus ]
"26 ./grid_lookup.h
[; ;./grid_lookup.h: 26: const uint8_t* get_grid_servo_angles(uint8_t x, uint8_t y);
[v _get_grid_servo_angles `(*Cuc ~T0 @X0 0 ef2`uc`uc ]
"27
[; ;./grid_lookup.h: 27: uint8_t get_dependent_servo_angle(uint8_t x, uint8_t y, uint8_t is_vertical);
[v _get_dependent_servo_angle `(uc ~T0 @X0 0 ef3`uc`uc`uc ]
"28
[; ;./grid_lookup.h: 28: void get_adjusted_servo_angles(uint8_t x, uint8_t y, uint8_t is_vertical, uint8_t* out_angles);
[v _get_adjusted_servo_angles `(v ~T0 @X0 0 ef4`uc`uc`uc`*uc ]
"34 ./servo.h
[; ;./servo.h: 34: void disableMagnet();
[v _disableMagnet `(v ~T0 @X0 0 e? ]
"15 arm_fsm.c
[; ;arm_fsm.c: 15: static ArmState current_state, next_state = IDLE;
[v _current_state `E36 ~T0 @X0 1 s ]
[v _next_state `E36 ~T0 @X0 1 s ]
[i _next_state
. `E36 0
]
"16
[; ;arm_fsm.c: 16: static ArmMode arm_mode = PLACE;
[v _arm_mode `E52 ~T0 @X0 1 s ]
[i _arm_mode
. `E52 0
]
"17
[; ;arm_fsm.c: 17: static uint8_t target_boat;
[v _target_boat `uc ~T0 @X0 1 s ]
"18
[; ;arm_fsm.c: 18: static uint8_t target_x, target_y;
[v _target_x `uc ~T0 @X0 1 s ]
[v _target_y `uc ~T0 @X0 1 s ]
"19
[; ;arm_fsm.c: 19: static uint8_t target_orientation;
[v _target_orientation `uc ~T0 @X0 1 s ]
"20
[; ;arm_fsm.c: 20: static volatile _Bool process_fsm = 0;
[v _process_fsm `Va ~T0 @X0 1 s ]
[i _process_fsm
-> -> 0 `i `a
]
"21
[; ;arm_fsm.c: 21: static volatile _Bool state_done = 1;
[v _state_done `Va ~T0 @X0 1 s ]
[i _state_done
-> -> 1 `i `a
]
"22
[; ;arm_fsm.c: 22: static volatile _Bool delay_done = 1;
[v _delay_done `Va ~T0 @X0 1 s ]
[i _delay_done
-> -> 1 `i `a
]
"23
[; ;arm_fsm.c: 23: static ArmState delay_next_state;
[v _delay_next_state `E36 ~T0 @X0 1 s ]
"25
[; ;arm_fsm.c: 25: void arm_fsm_init() {
[v _arm_fsm_init `(v ~T0 @X0 1 ef ]
{
[e :U _arm_fsm_init ]
[f ]
"26
[; ;arm_fsm.c: 26:     initServo();
[e ( _initServo ..  ]
"27
[; ;arm_fsm.c: 27:     current_state = next_state = IDLE;
[e = _current_state = _next_state . `E36 0 ]
"28
[; ;arm_fsm.c: 28:     process_fsm = 0;
[e = _process_fsm -> -> 0 `i `a ]
"29
[; ;arm_fsm.c: 29:     state_done = 1;
[e = _state_done -> -> 1 `i `a ]
"30
[; ;arm_fsm.c: 30:     TMR0_OverflowCallbackRegister(delay);
[e ( _TMR0_OverflowCallbackRegister (1 -> &U _delay `*F144 ]
"32
[; ;arm_fsm.c: 32: }
[e :UE 4 ]
}
"34
[; ;arm_fsm.c: 34: void arm_set_target(uint8_t boat_id, uint8_t x, uint8_t y, uint8_t is_vertical, ArmMode mode) {
[v _arm_set_target `(v ~T0 @X0 1 ef5`uc`uc`uc`uc`E52 ]
{
[e :U _arm_set_target ]
[v _boat_id `uc ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _y `uc ~T0 @X0 1 r3 ]
[v _is_vertical `uc ~T0 @X0 1 r4 ]
[v _mode `E52 ~T0 @X0 1 r5 ]
[f ]
"35
[; ;arm_fsm.c: 35:     if (current_state == IDLE) {
[e $ ! == -> _current_state `ui -> . `E36 0 `ui 6  ]
{
"36
[; ;arm_fsm.c: 36:         target_boat = boat_id;
[e = _target_boat _boat_id ]
"37
[; ;arm_fsm.c: 37:         target_x = x;
[e = _target_x _x ]
"38
[; ;arm_fsm.c: 38:         target_y = y;
[e = _target_y _y ]
"39
[; ;arm_fsm.c: 39:         target_orientation = is_vertical;
[e = _target_orientation _is_vertical ]
"40
[; ;arm_fsm.c: 40:         arm_mode = mode;
[e = _arm_mode _mode ]
"41
[; ;arm_fsm.c: 41:         current_state = (mode == PLACE) ? PICKUP : ROTATE_BOARD;
[e = _current_state -> ? == -> _mode `ui -> . `E52 0 `ui : . `E36 1 . `E36 6 `E36 ]
"42
[; ;arm_fsm.c: 42:         process_fsm = 1;
[e = _process_fsm -> -> 1 `i `a ]
"43
[; ;arm_fsm.c: 43:     }
}
[e :U 6 ]
"44
[; ;arm_fsm.c: 44: }
[e :UE 5 ]
}
"46
[; ;arm_fsm.c: 46: _Bool arm_is_busy() {
[v _arm_is_busy `(a ~T0 @X0 1 ef ]
{
[e :U _arm_is_busy ]
[f ]
"47
[; ;arm_fsm.c: 47:     return process_fsm;
[e ) _process_fsm ]
[e $UE 7  ]
"48
[; ;arm_fsm.c: 48: }
[e :UE 7 ]
}
"50
[; ;arm_fsm.c: 50: void delay() {
[v _delay `(v ~T0 @X0 1 ef ]
{
[e :U _delay ]
[f ]
"51
[; ;arm_fsm.c: 51:     delay_done = 1;
[e = _delay_done -> -> 1 `i `a ]
"52
[; ;arm_fsm.c: 52:     TMR0_Stop();
[e ( _TMR0_Stop ..  ]
"53
[; ;arm_fsm.c: 53: }
[e :UE 8 ]
}
"55
[; ;arm_fsm.c: 55: void start_fsm_delay(ArmState next) {
[v _start_fsm_delay `(v ~T0 @X0 1 ef1`E36 ]
{
[e :U _start_fsm_delay ]
[v _next `E36 ~T0 @X0 1 r1 ]
[f ]
"56
[; ;arm_fsm.c: 56:     delay_done = 0;
[e = _delay_done -> -> 0 `i `a ]
"57
[; ;arm_fsm.c: 57:     delay_next_state = next;
[e = _delay_next_state _next ]
"59
[; ;arm_fsm.c: 59:     TMR0_Start();
[e ( _TMR0_Start ..  ]
"60
[; ;arm_fsm.c: 60: }
[e :UE 9 ]
}
"63
[; ;arm_fsm.c: 63: void arm_fsm_update() {
[v _arm_fsm_update `(v ~T0 @X0 1 ef ]
{
[e :U _arm_fsm_update ]
[f ]
"64
[; ;arm_fsm.c: 64:     if (!process_fsm || servoMovement()) return;
[e $ ! || ! != -> _process_fsm `i -> 0 `i != -> ( _servoMovement ..  `i -> 0 `i 11  ]
[e $UE 10  ]
[e :U 11 ]
"66
[; ;arm_fsm.c: 66:     switch (current_state) {
[e $U 13  ]
{
"67
[; ;arm_fsm.c: 67:         case PICKUP: {
[e :U 14 ]
{
"68
[; ;arm_fsm.c: 68:             const uint8_t* angles = get_docking_servo_angles(target_boat);
[v _angles `*Cuc ~T0 @X0 1 a ]
[e = _angles ( _get_docking_servo_angles (1 _target_boat ]
"69
[; ;arm_fsm.c: 69:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 _angles ]
"70
[; ;arm_fsm.c: 70:             next_state = (arm_mode == PLACE) ? MAGNET_ON : MAGNET_OFF;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 2 . `E36 9 `E36 ]
"71
[; ;arm_fsm.c: 71:             break;
[e $U 12  ]
"72
[; ;arm_fsm.c: 72:         }
}
"74
[; ;arm_fsm.c: 74:         case MAGNET_ON: {
[e :U 15 ]
{
"75
[; ;arm_fsm.c: 75:             enableMagnet();
[e ( _enableMagnet ..  ]
"76
[; ;arm_fsm.c: 76:             next_state = (arm_mode == PLACE) ? MOVE_UP_DOCK : MIDDLE3;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 3 . `E36 11 `E36 ]
"77
[; ;arm_fsm.c: 77:             break;
[e $U 12  ]
"78
[; ;arm_fsm.c: 78:         }
}
"80
[; ;arm_fsm.c: 80:         case MOVE_UP_DOCK: {
[e :U 16 ]
{
[v F158 `us ~T0 @X0 -> 4 `i s ]
[i F158
:U ..
"81
[; ;arm_fsm.c: 81:             uint16_t moveup_angles[4] = {calculateAngle(50), getAngle(1), getAngle(2), calculateAngle(41)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F158 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 -> -> 50 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 -> -> 41 `i `uc ]
"82
[; ;arm_fsm.c: 82:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"83
[; ;arm_fsm.c: 83:             next_state = MIDDLE1;
[e = _next_state . `E36 4 ]
"84
[; ;arm_fsm.c: 84:             break;
[e $U 12  ]
"85
[; ;arm_fsm.c: 85:         }
}
"87
[; ;arm_fsm.c: 87:         case MIDDLE1:{
[e :U 17 ]
{
[v F160 `us ~T0 @X0 -> 4 `i s ]
[i F160
:U ..
"88
[; ;arm_fsm.c: 88:             uint16_t middle1_angles[4] = {calculateAngle(50), getAngle(1), getAngle(2), calculateAngle(55)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _middle1_angles `us ~T0 @X0 -> 4 `i a ]
[e = _middle1_angles F160 ]
[e ; = *U + &U _middle1_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _middle1_angles `ui `ux ( _calculateAngle (1 -> -> 50 `i `uc ; = *U + &U _middle1_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _middle1_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _middle1_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _middle1_angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _middle1_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _middle1_angles `ui `ux ( _calculateAngle (1 -> -> 55 `i `uc ]
"89
[; ;arm_fsm.c: 89:             move_servo_to_int(middle1_angles);
[e ( _move_servo_to_int (1 -> &U _middle1_angles `*Cus ]
"92
[; ;arm_fsm.c: 92:             next_state = (arm_mode == PLACE) ? ROTATE_BOARD : PICKUP;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 6 . `E36 1 `E36 ]
"93
[; ;arm_fsm.c: 93:             break;
[e $U 12  ]
"94
[; ;arm_fsm.c: 94:         }
}
"96
[; ;arm_fsm.c: 96:         case MIDDLE2: {
[e :U 18 ]
{
[v F162 `uc ~T0 @X0 -> 4 `i s ]
[i F162
:U ..
"97
[; ;arm_fsm.c: 97:             uint8_t middle2_angles[4] = {47, 90, 115, 50};
-> -> 47 `i `uc
-> -> 90 `i `uc
-> -> 115 `i `uc
-> -> 50 `i `uc
..
]
[v _middle2_angles `uc ~T0 @X0 -> 4 `i a ]
[e = _middle2_angles F162 ]
"98
[; ;arm_fsm.c: 98:             move_servo_to_angles(middle2_angles);
[e ( _move_servo_to_angles (1 -> &U _middle2_angles `*Cuc ]
"99
[; ;arm_fsm.c: 99:             next_state = (arm_mode == PLACE) ? PLACEMENT : MIDDLE1;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 8 . `E36 4 `E36 ]
"100
[; ;arm_fsm.c: 100:             break;
[e $U 12  ]
"101
[; ;arm_fsm.c: 101:         }
}
"103
[; ;arm_fsm.c: 103:         case ROTATE_BOARD: {
[e :U 19 ]
{
[v F164 `us ~T0 @X0 -> 4 `i s ]
[i F164
:U ..
"104
[; ;arm_fsm.c: 104:             uint16_t moveup_angles[4] = {getAngle(0), getAngle(1), calculateAngle(get_grid_servo_angles(target_x, target_y)[2]), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F164 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 *U + ( _get_grid_servo_angles (2 , _target_x _target_y * -> -> 2 `i `x -> -> # *U ( _get_grid_servo_angles (2 , _target_x _target_y `i `x = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"105
[; ;arm_fsm.c: 105:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"106
[; ;arm_fsm.c: 106:             next_state = (arm_mode == PLACE) ? BOAT_ROTATE : PLACEMENT;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 7 . `E36 8 `E36 ]
"107
[; ;arm_fsm.c: 107:             break;
[e $U 12  ]
"108
[; ;arm_fsm.c: 108:         }
}
"110
[; ;arm_fsm.c: 110:         case BOAT_ROTATE: {
[e :U 20 ]
{
[v F166 `us ~T0 @X0 -> 4 `i s ]
[i F166
:U ..
"111
[; ;arm_fsm.c: 111:             uint16_t moveup_angles[4] = {getAngle(0), calculateAngle(get_dependent_servo_angle(target_x, target_y, target_orientation)), getAngle(2), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F166 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 ( _get_dependent_servo_angle (3 , , _target_x _target_y _target_orientation ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"112
[; ;arm_fsm.c: 112:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"113
[; ;arm_fsm.c: 113:             next_state = PLACEMENT;
[e = _next_state . `E36 8 ]
"114
[; ;arm_fsm.c: 114:             break;
[e $U 12  ]
"115
[; ;arm_fsm.c: 115:         }
}
"117
[; ;arm_fsm.c: 117:         case PLACEMENT: {
[e :U 21 ]
{
"118
[; ;arm_fsm.c: 118:             uint8_t angles[4];
[v _angles `uc ~T0 @X0 -> 4 `i a ]
"119
[; ;arm_fsm.c: 119:             get_adjusted_servo_angles(target_x, target_y, target_orientation, angles);
[e ( _get_adjusted_servo_angles (4 , , , _target_x _target_y _target_orientation &U _angles ]
"120
[; ;arm_fsm.c: 120:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 -> &U _angles `*Cuc ]
"125
[; ;arm_fsm.c: 125:             next_state = (arm_mode == PLACE) ? MAGNET_OFF : MAGNET_ON;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 9 . `E36 2 `E36 ]
"129
[; ;arm_fsm.c: 129:             break;
[e $U 12  ]
"130
[; ;arm_fsm.c: 130:         }
}
"132
[; ;arm_fsm.c: 132:         case MAGNET_OFF: {
[e :U 22 ]
{
"133
[; ;arm_fsm.c: 133:             disableMagnet();
[e ( _disableMagnet ..  ]
"138
[; ;arm_fsm.c: 138:             start_fsm_delay((arm_mode == PLACE) ? MIDDLE3 : RETURN);
[e ( _start_fsm_delay (1 -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 11 . `E36 13 `E36 ]
"139
[; ;arm_fsm.c: 139:             next_state = WAIT;
[e = _next_state . `E36 10 ]
"140
[; ;arm_fsm.c: 140:             break;
[e $U 12  ]
"141
[; ;arm_fsm.c: 141:         }
}
"143
[; ;arm_fsm.c: 143:         case WAIT: {
[e :U 23 ]
{
"144
[; ;arm_fsm.c: 144:             if (!delay_done) return;
[e $ ! ! != -> _delay_done `i -> 0 `i 24  ]
[e $UE 10  ]
[e :U 24 ]
"145
[; ;arm_fsm.c: 145:             next_state = delay_next_state;
[e = _next_state _delay_next_state ]
"146
[; ;arm_fsm.c: 146:             break;
[e $U 12  ]
"147
[; ;arm_fsm.c: 147:         }
}
"149
[; ;arm_fsm.c: 149:         case MIDDLE3: {
[e :U 25 ]
{
[v F169 `us ~T0 @X0 -> 4 `i s ]
[i F169
:U ..
"150
[; ;arm_fsm.c: 150:             uint16_t middle2_angles[4] = {calculateAngle(50), getAngle(1), getAngle(2), calculateAngle(55)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _middle2_angles `us ~T0 @X0 -> 4 `i a ]
[e = _middle2_angles F169 ]
[e ; = *U + &U _middle2_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _middle2_angles `ui `ux ( _calculateAngle (1 -> -> 50 `i `uc ; = *U + &U _middle2_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _middle2_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _middle2_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _middle2_angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _middle2_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _middle2_angles `ui `ux ( _calculateAngle (1 -> -> 55 `i `uc ]
"151
[; ;arm_fsm.c: 151:             move_servo_to_int(middle2_angles);
[e ( _move_servo_to_int (1 -> &U _middle2_angles `*Cus ]
"152
[; ;arm_fsm.c: 152:             next_state = (arm_mode == PLACE) ? RETURN : MIDDLE1;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E52 0 `ui : . `E36 13 . `E36 4 `E36 ]
"153
[; ;arm_fsm.c: 153:             break;
[e $U 12  ]
"154
[; ;arm_fsm.c: 154:         }
}
"156
[; ;arm_fsm.c: 156:         case ROTATE_DOCK: {
[e :U 26 ]
{
[v F171 `us ~T0 @X0 -> 4 `i s ]
[i F171
:U ..
"157
[; ;arm_fsm.c: 157:             uint16_t moveup_angles[4] = {getAngle(0), getAngle(1), calculateAngle(get_docking_servo_angles(target_boat)[2]), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F171 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 *U + ( _get_docking_servo_angles (1 _target_boat * -> -> 2 `i `x -> -> # *U ( _get_docking_servo_angles (1 _target_boat `i `x = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"158
[; ;arm_fsm.c: 158:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"159
[; ;arm_fsm.c: 159:             next_state = PLACEMENT;
[e = _next_state . `E36 8 ]
"160
[; ;arm_fsm.c: 160:             break;
[e $U 12  ]
"161
[; ;arm_fsm.c: 161:         }
}
"163
[; ;arm_fsm.c: 163:         case RETURN: {
[e :U 27 ]
{
[v F173 `uc ~T0 @X0 -> 4 `i s ]
[i F173
:U ..
"164
[; ;arm_fsm.c: 164:             uint8_t idle_angles[4] = {43, 45, 25, 45};
-> -> 43 `i `uc
-> -> 45 `i `uc
-> -> 25 `i `uc
-> -> 45 `i `uc
..
]
[v _idle_angles `uc ~T0 @X0 -> 4 `i a ]
[e = _idle_angles F173 ]
"165
[; ;arm_fsm.c: 165:             move_servo_to_angles(idle_angles);
[e ( _move_servo_to_angles (1 -> &U _idle_angles `*Cuc ]
"166
[; ;arm_fsm.c: 166:             next_state = IDLE;
[e = _next_state . `E36 0 ]
"167
[; ;arm_fsm.c: 167:             process_fsm = 0;
[e = _process_fsm -> -> 0 `i `a ]
"168
[; ;arm_fsm.c: 168:             break;
[e $U 12  ]
"169
[; ;arm_fsm.c: 169:             }
}
"171
[; ;arm_fsm.c: 171:         case IDLE:
[e :U 28 ]
"172
[; ;arm_fsm.c: 172:         default:
[e :U 29 ]
"173
[; ;arm_fsm.c: 173:             break;
[e $U 12  ]
"174
[; ;arm_fsm.c: 174:     }
}
[e $U 12  ]
[e :U 13 ]
[e [\ -> _current_state `ui , $ -> . `E36 1 `ui 14
 , $ -> . `E36 2 `ui 15
 , $ -> . `E36 3 `ui 16
 , $ -> . `E36 4 `ui 17
 , $ -> . `E36 5 `ui 18
 , $ -> . `E36 6 `ui 19
 , $ -> . `E36 7 `ui 20
 , $ -> . `E36 8 `ui 21
 , $ -> . `E36 9 `ui 22
 , $ -> . `E36 10 `ui 23
 , $ -> . `E36 11 `ui 25
 , $ -> . `E36 12 `ui 26
 , $ -> . `E36 13 `ui 27
 , $ -> . `E36 0 `ui 28
 29 ]
[e :U 12 ]
"176
[; ;arm_fsm.c: 176:     current_state = next_state;
[e = _current_state _next_state ]
"177
[; ;arm_fsm.c: 177: }
[e :UE 10 ]
}
