Version 4.0 HI-TECH Software Intermediate Code
"15 arm_fsm.c
[; ;arm_fsm.c: 15: static ArmState current_state, next_state, previous_state = IDLE;
[c E36 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E36 . IDLE ROTATE_DOCK PICKUP MAGNET_ON MOVE_UP_DOCK STILL ROTATE_BOARD BOAT_ROTATE MOVE_UP_BOARD PLACEMENT MAGNET_OFF WAIT RETURN  ]
"16
[; ;arm_fsm.c: 16: static ArmMode arm_mode = PLACE;
[c E51 0 1 .. ]
[n E51 . PLACE REMOVE  ]
"36 ./servo.h
[; ;./servo.h: 36: void initServo();
[v _initServo `(v ~T0 @X0 0 e? ]
[v F82 `(v ~T0 @X0 0 tf ]
"280 ./mcc_generated_files/timer/tmr0.h
[; ;./mcc_generated_files/timer/tmr0.h: 280: void TMR0_OverflowCallbackRegister(void (* CallbackHandler)(void));
[v _TMR0_OverflowCallbackRegister `(v ~T0 @X0 0 ef1`*F82 ]
"40 ./arm_fsm.h
[; ;./arm_fsm.h: 40: void delay();
[v _delay `(v ~T0 @X0 0 e? ]
[v F247 `(v ~T0 @X0 0 tf ]
"195 ./mcc_generated_files/timer/tmr0.h
[; ;./mcc_generated_files/timer/tmr0.h: 195: void TMR0_Stop(void);
[v _TMR0_Stop `(v ~T0 @X0 0 ef ]
"186
[; ;./mcc_generated_files/timer/tmr0.h: 186: void TMR0_Start(void);
[v _TMR0_Start `(v ~T0 @X0 0 ef ]
"40 ./servo.h
[; ;./servo.h: 40: _Bool servoMovement();
[v _servoMovement `(a ~T0 @X0 0 e? ]
"450 ./mcc_generated_files/timer/tmr2.h
[; ;./mcc_generated_files/timer/tmr2.h: 450: void TMR2_PeriodCountSet(size_t periodVal);
[v _TMR2_PeriodCountSet `(v ~T0 @X0 0 ef1`ui ]
"41 ./servo.h
[; ;./servo.h: 41: uint16_t getAngle(uint8_t i);
[v _getAngle `(us ~T0 @X0 0 ef1`uc ]
"35
[; ;./servo.h: 35: uint16_t calculateAngle(uint8_t angleDeg);
[v _calculateAngle `(us ~T0 @X0 0 ef1`uc ]
"24 ./boat_control.h
[; ;./boat_control.h: 24: const uint8_t* get_docking_servo_angles(uint8_t boat_id);
[v _get_docking_servo_angles `(*Cuc ~T0 @X0 0 ef1`uc ]
"39 ./servo.h
[; ;./servo.h: 39: void move_servo_to_int(const uint16_t* intAngles);
[v _move_servo_to_int `(v ~T0 @X0 0 ef1`*Cus ]
"38
[; ;./servo.h: 38: void move_servo_to_angles(const uint8_t* angles);
[v _move_servo_to_angles `(v ~T0 @X0 0 ef1`*Cuc ]
"33
[; ;./servo.h: 33: void enableMagnet();
[v _enableMagnet `(v ~T0 @X0 0 e? ]
"25 ./boat_control.h
[; ;./boat_control.h: 25: const uint8_t* get_docking_servo_angles_up(uint8_t boat_id);
[v _get_docking_servo_angles_up `(*Cuc ~T0 @X0 0 ef1`uc ]
"27 ./grid_lookup.h
[; ;./grid_lookup.h: 27: const uint8_t* get_grid_servo_angles(uint8_t x, uint8_t y);
[v _get_grid_servo_angles `(*Cuc ~T0 @X0 0 ef2`uc`uc ]
"28
[; ;./grid_lookup.h: 28: uint8_t get_dependent_servo_angle(uint8_t x, uint8_t y, uint8_t is_vertical);
[v _get_dependent_servo_angle `(uc ~T0 @X0 0 ef3`uc`uc`uc ]
"30
[; ;./grid_lookup.h: 30: void get_adjusted_servo_angles_up(uint8_t x, uint8_t y, uint8_t is_vertical, uint8_t* out_angles);
[v _get_adjusted_servo_angles_up `(v ~T0 @X0 0 ef4`uc`uc`uc`*uc ]
"29
[; ;./grid_lookup.h: 29: void get_adjusted_servo_angles(uint8_t x, uint8_t y, uint8_t is_vertical, uint8_t* out_angles);
[v _get_adjusted_servo_angles `(v ~T0 @X0 0 ef4`uc`uc`uc`*uc ]
"34 ./servo.h
[; ;./servo.h: 34: void disableMagnet();
[v _disableMagnet `(v ~T0 @X0 0 e? ]
"15 arm_fsm.c
[; ;arm_fsm.c: 15: static ArmState current_state, next_state, previous_state = IDLE;
[v _current_state `E36 ~T0 @X0 1 s ]
[v _next_state `E36 ~T0 @X0 1 s ]
[v _previous_state `E36 ~T0 @X0 1 s ]
[i _previous_state
. `E36 0
]
"16
[; ;arm_fsm.c: 16: static ArmMode arm_mode = PLACE;
[v _arm_mode `E51 ~T0 @X0 1 s ]
[i _arm_mode
. `E51 0
]
"17
[; ;arm_fsm.c: 17: static uint8_t target_boat;
[v _target_boat `uc ~T0 @X0 1 s ]
"18
[; ;arm_fsm.c: 18: static uint8_t target_x, target_y;
[v _target_x `uc ~T0 @X0 1 s ]
[v _target_y `uc ~T0 @X0 1 s ]
"19
[; ;arm_fsm.c: 19: static uint8_t target_orientation;
[v _target_orientation `uc ~T0 @X0 1 s ]
"20
[; ;arm_fsm.c: 20: static volatile _Bool process_fsm = 0;
[v _process_fsm `Va ~T0 @X0 1 s ]
[i _process_fsm
-> -> 0 `i `a
]
"21
[; ;arm_fsm.c: 21: static volatile _Bool state_done = 1;
[v _state_done `Va ~T0 @X0 1 s ]
[i _state_done
-> -> 1 `i `a
]
"22
[; ;arm_fsm.c: 22: static volatile _Bool delay_done = 1;
[v _delay_done `Va ~T0 @X0 1 s ]
[i _delay_done
-> -> 1 `i `a
]
"24
[; ;arm_fsm.c: 24: void arm_fsm_init() {
[v _arm_fsm_init `(v ~T0 @X0 1 ef ]
{
[e :U _arm_fsm_init ]
[f ]
"25
[; ;arm_fsm.c: 25:     initServo();
[e ( _initServo ..  ]
"26
[; ;arm_fsm.c: 26:     current_state = next_state = previous_state = IDLE;
[e = _current_state = _next_state = _previous_state . `E36 0 ]
"27
[; ;arm_fsm.c: 27:     process_fsm = 0;
[e = _process_fsm -> -> 0 `i `a ]
"28
[; ;arm_fsm.c: 28:     state_done = 1;
[e = _state_done -> -> 1 `i `a ]
"29
[; ;arm_fsm.c: 29:     TMR0_OverflowCallbackRegister(delay);
[e ( _TMR0_OverflowCallbackRegister (1 -> &U _delay `*F247 ]
"31
[; ;arm_fsm.c: 31: }
[e :UE 5 ]
}
"33
[; ;arm_fsm.c: 33: void arm_set_target(uint8_t boat_id, uint8_t x, uint8_t y, uint8_t is_vertical, ArmMode mode) {
[v _arm_set_target `(v ~T0 @X0 1 ef5`uc`uc`uc`uc`E51 ]
{
[e :U _arm_set_target ]
[v _boat_id `uc ~T0 @X0 1 r1 ]
[v _x `uc ~T0 @X0 1 r2 ]
[v _y `uc ~T0 @X0 1 r3 ]
[v _is_vertical `uc ~T0 @X0 1 r4 ]
[v _mode `E51 ~T0 @X0 1 r5 ]
[f ]
"34
[; ;arm_fsm.c: 34:     if (current_state == IDLE) {
[e $ ! == -> _current_state `ui -> . `E36 0 `ui 7  ]
{
"35
[; ;arm_fsm.c: 35:         target_boat = boat_id;
[e = _target_boat _boat_id ]
"36
[; ;arm_fsm.c: 36:         target_x = x;
[e = _target_x _x ]
"37
[; ;arm_fsm.c: 37:         target_y = y;
[e = _target_y _y ]
"38
[; ;arm_fsm.c: 38:         target_orientation = is_vertical;
[e = _target_orientation _is_vertical ]
"39
[; ;arm_fsm.c: 39:         arm_mode = mode;
[e = _arm_mode _mode ]
"40
[; ;arm_fsm.c: 40:         current_state = (mode == PLACE) ? ROTATE_DOCK : ROTATE_BOARD;
[e = _current_state -> ? == -> _mode `ui -> . `E51 0 `ui : . `E36 1 . `E36 6 `E36 ]
"41
[; ;arm_fsm.c: 41:         process_fsm = 1;
[e = _process_fsm -> -> 1 `i `a ]
"42
[; ;arm_fsm.c: 42:     }
}
[e :U 7 ]
"43
[; ;arm_fsm.c: 43: }
[e :UE 6 ]
}
"45
[; ;arm_fsm.c: 45: _Bool arm_is_busy() {
[v _arm_is_busy `(a ~T0 @X0 1 ef ]
{
[e :U _arm_is_busy ]
[f ]
"46
[; ;arm_fsm.c: 46:     return process_fsm;
[e ) _process_fsm ]
[e $UE 8  ]
"47
[; ;arm_fsm.c: 47: }
[e :UE 8 ]
}
"49
[; ;arm_fsm.c: 49: void delay() {
[v _delay `(v ~T0 @X0 1 ef ]
{
[e :U _delay ]
[f ]
"50
[; ;arm_fsm.c: 50:     delay_done = 1;
[e = _delay_done -> -> 1 `i `a ]
"51
[; ;arm_fsm.c: 51:     TMR0_Stop();
[e ( _TMR0_Stop ..  ]
"52
[; ;arm_fsm.c: 52: }
[e :UE 9 ]
}
"54
[; ;arm_fsm.c: 54: void start_fsm_delay(){
[v _start_fsm_delay `(v ~T0 @X0 1 ef ]
{
[e :U _start_fsm_delay ]
[f ]
"55
[; ;arm_fsm.c: 55:     delay_done = 0;
[e = _delay_done -> -> 0 `i `a ]
"58
[; ;arm_fsm.c: 58:     TMR0_Start();
[e ( _TMR0_Start ..  ]
"59
[; ;arm_fsm.c: 59: }
[e :UE 10 ]
}
"62
[; ;arm_fsm.c: 62: void arm_fsm_update() {
[v _arm_fsm_update `(v ~T0 @X0 1 ef ]
{
[e :U _arm_fsm_update ]
[f ]
"63
[; ;arm_fsm.c: 63:     if (!process_fsm || servoMovement()) return;
[e $ ! || ! != -> _process_fsm `i -> 0 `i != -> ( _servoMovement ..  `i -> 0 `i 12  ]
[e $UE 11  ]
[e :U 12 ]
"64
[; ;arm_fsm.c: 64:     TMR2_PeriodCountSet(0xF);
[e ( _TMR2_PeriodCountSet (1 -> -> 15 `i `ui ]
"65
[; ;arm_fsm.c: 65:     switch (current_state) {
[e $U 14  ]
{
"67
[; ;arm_fsm.c: 67:         case ROTATE_DOCK: {
[e :U 15 ]
{
"68
[; ;arm_fsm.c: 68:             TMR2_PeriodCountSet(0x2);
[e ( _TMR2_PeriodCountSet (1 -> -> 2 `i `ui ]
[v F259 `us ~T0 @X0 -> 4 `i s ]
[i F259
:U ..
"69
[; ;arm_fsm.c: 69:             uint16_t moveup_angles[4] = {getAngle(0), getAngle(1), calculateAngle(get_docking_servo_angles(target_boat)[2]), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F259 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 *U + ( _get_docking_servo_angles (1 _target_boat * -> -> 2 `i `x -> -> # *U ( _get_docking_servo_angles (1 _target_boat `i `x = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"70
[; ;arm_fsm.c: 70:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"71
[; ;arm_fsm.c: 71:             switch(previous_state) {
[e $U 17  ]
{
"72
[; ;arm_fsm.c: 72:                 case STILL: {
[e :U 18 ]
{
"73
[; ;arm_fsm.c: 73:                     next_state = (arm_mode == PLACE) ? RETURN : MOVE_UP_DOCK;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 12 . `E36 4 `E36 ]
"74
[; ;arm_fsm.c: 74:                     break;
[e $U 16  ]
"75
[; ;arm_fsm.c: 75:                 }
}
"76
[; ;arm_fsm.c: 76:                 default: {
[e :U 19 ]
{
"77
[; ;arm_fsm.c: 77:                     next_state = PICKUP;
[e = _next_state . `E36 2 ]
"78
[; ;arm_fsm.c: 78:                     break;
[e $U 16  ]
"79
[; ;arm_fsm.c: 79:                 }
}
"80
[; ;arm_fsm.c: 80:             }
}
[e $U 16  ]
[e :U 17 ]
[e [\ -> _previous_state `ui , $ -> . `E36 5 `ui 18
 19 ]
[e :U 16 ]
"81
[; ;arm_fsm.c: 81:             break;
[e $U 13  ]
"82
[; ;arm_fsm.c: 82:         }
}
"85
[; ;arm_fsm.c: 85:         case PICKUP: {
[e :U 20 ]
{
"86
[; ;arm_fsm.c: 86:             const uint8_t* angles = get_docking_servo_angles(target_boat);
[v _angles `*Cuc ~T0 @X0 1 a ]
[e = _angles ( _get_docking_servo_angles (1 _target_boat ]
"87
[; ;arm_fsm.c: 87:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 _angles ]
"88
[; ;arm_fsm.c: 88:             next_state = (arm_mode == PLACE) ? MAGNET_ON : MAGNET_OFF;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 3 . `E36 10 `E36 ]
"89
[; ;arm_fsm.c: 89:             break;
[e $U 13  ]
"90
[; ;arm_fsm.c: 90:         }
}
"92
[; ;arm_fsm.c: 92:         case MAGNET_ON: {
[e :U 21 ]
{
"93
[; ;arm_fsm.c: 93:             enableMagnet();
[e ( _enableMagnet ..  ]
"94
[; ;arm_fsm.c: 94:             next_state = (arm_mode == PLACE) ? MOVE_UP_DOCK : MOVE_UP_BOARD;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 4 . `E36 8 `E36 ]
"95
[; ;arm_fsm.c: 95:             break;
[e $U 13  ]
"96
[; ;arm_fsm.c: 96:         }
}
"98
[; ;arm_fsm.c: 98:         case MOVE_UP_DOCK: {
[e :U 22 ]
{
"99
[; ;arm_fsm.c: 99:             const uint8_t* angles = get_docking_servo_angles_up(target_boat);
[v _angles `*Cuc ~T0 @X0 1 a ]
[e = _angles ( _get_docking_servo_angles_up (1 _target_boat ]
"100
[; ;arm_fsm.c: 100:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 _angles ]
"101
[; ;arm_fsm.c: 101:             switch(previous_state) {
[e $U 24  ]
{
"102
[; ;arm_fsm.c: 102:                 case MAGNET_ON: {
[e :U 25 ]
{
"103
[; ;arm_fsm.c: 103:                     next_state = STILL;
[e = _next_state . `E36 5 ]
"104
[; ;arm_fsm.c: 104:                     break;
[e $U 23  ]
"105
[; ;arm_fsm.c: 105:                 }
}
"106
[; ;arm_fsm.c: 106:                 case ROTATE_DOCK: {
[e :U 26 ]
{
"107
[; ;arm_fsm.c: 107:                     next_state = PICKUP;
[e = _next_state . `E36 2 ]
"108
[; ;arm_fsm.c: 108:                     break;
[e $U 23  ]
"109
[; ;arm_fsm.c: 109:                 }
}
"110
[; ;arm_fsm.c: 110:                 case WAIT: {
[e :U 27 ]
{
"111
[; ;arm_fsm.c: 111:                     next_state = STILL;
[e = _next_state . `E36 5 ]
"112
[; ;arm_fsm.c: 112:                 }
}
"113
[; ;arm_fsm.c: 113:             }
}
[e $U 23  ]
[e :U 24 ]
[e [\ -> _previous_state `ui , $ -> . `E36 3 `ui 25
 , $ -> . `E36 1 `ui 26
 , $ -> . `E36 11 `ui 27
 23 ]
[e :U 23 ]
"114
[; ;arm_fsm.c: 114:             break;
[e $U 13  ]
"115
[; ;arm_fsm.c: 115:         }
}
"117
[; ;arm_fsm.c: 117:         case STILL: {
[e :U 28 ]
{
[v F263 `us ~T0 @X0 -> 4 `i s ]
[i F263
:U ..
"118
[; ;arm_fsm.c: 118:             uint16_t moveup_angles[4] = {calculateAngle(43), getAngle(1), getAngle(2), calculateAngle(45)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F263 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 -> -> 43 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 -> -> 45 `i `uc ]
"119
[; ;arm_fsm.c: 119:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"120
[; ;arm_fsm.c: 120:             switch(previous_state) {
[e $U 30  ]
{
"121
[; ;arm_fsm.c: 121:                 case MOVE_UP_DOCK: {
[e :U 31 ]
{
"122
[; ;arm_fsm.c: 122:                     next_state = (arm_mode == PLACE) ? ROTATE_BOARD : RETURN;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 6 . `E36 12 `E36 ]
"123
[; ;arm_fsm.c: 123:                     break;
[e $U 29  ]
"124
[; ;arm_fsm.c: 124:                 }
}
"125
[; ;arm_fsm.c: 125:                 case MOVE_UP_BOARD: {
[e :U 32 ]
{
"126
[; ;arm_fsm.c: 126:                     next_state = ROTATE_DOCK;
[e = _next_state . `E36 1 ]
"127
[; ;arm_fsm.c: 127:                     break;
[e $U 29  ]
"128
[; ;arm_fsm.c: 128:                 }
}
"129
[; ;arm_fsm.c: 129:             }
}
[e $U 29  ]
[e :U 30 ]
[e [\ -> _previous_state `ui , $ -> . `E36 4 `ui 31
 , $ -> . `E36 8 `ui 32
 29 ]
[e :U 29 ]
"130
[; ;arm_fsm.c: 130:             break;
[e $U 13  ]
"132
[; ;arm_fsm.c: 132:         }
}
"134
[; ;arm_fsm.c: 134:         case ROTATE_BOARD: {
[e :U 33 ]
{
"135
[; ;arm_fsm.c: 135:             TMR2_PeriodCountSet(0x2);
[e ( _TMR2_PeriodCountSet (1 -> -> 2 `i `ui ]
[v F265 `us ~T0 @X0 -> 4 `i s ]
[i F265
:U ..
"136
[; ;arm_fsm.c: 136:             uint16_t moveup_angles[4] = {getAngle(0), getAngle(1), calculateAngle(get_grid_servo_angles(target_x, target_y)[2]), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _moveup_angles `us ~T0 @X0 -> 4 `i a ]
[e = _moveup_angles F265 ]
[e ; = *U + &U _moveup_angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _moveup_angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 1 `i `uc ; = *U + &U _moveup_angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _calculateAngle (1 *U + ( _get_grid_servo_angles (2 , _target_x _target_y * -> -> 2 `i `x -> -> # *U ( _get_grid_servo_angles (2 , _target_x _target_y `i `x = *U + &U _moveup_angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _moveup_angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"137
[; ;arm_fsm.c: 137:             move_servo_to_int(moveup_angles);
[e ( _move_servo_to_int (1 -> &U _moveup_angles `*Cus ]
"138
[; ;arm_fsm.c: 138:             next_state = BOAT_ROTATE;
[e = _next_state . `E36 7 ]
"139
[; ;arm_fsm.c: 139:             break;
[e $U 13  ]
"140
[; ;arm_fsm.c: 140:         }
}
"142
[; ;arm_fsm.c: 142:         case BOAT_ROTATE: {
[e :U 34 ]
{
"143
[; ;arm_fsm.c: 143:             TMR2_PeriodCountSet(0x7);
[e ( _TMR2_PeriodCountSet (1 -> -> 7 `i `ui ]
[v F267 `us ~T0 @X0 -> 4 `i s ]
[i F267
:U ..
"144
[; ;arm_fsm.c: 144:             uint16_t angles[4] = {getAngle(0), calculateAngle(get_dependent_servo_angle(target_x, target_y, target_orientation)), getAngle(2), getAngle(3)};
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
-> -> 0 `i `us
..
]
[v _angles `us ~T0 @X0 -> 4 `i a ]
[e = _angles F267 ]
[e ; = *U + &U _angles * -> -> -> 0 `i `ui `ux -> -> # *U &U _angles `ui `ux ( _getAngle (1 -> -> 0 `i `uc ; = *U + &U _angles * -> -> -> 1 `i `ui `ux -> -> # *U &U _angles `ui `ux ( _calculateAngle (1 ( _get_dependent_servo_angle (3 , , _target_x _target_y _target_orientation ; = *U + &U _angles * -> -> -> 2 `i `ui `ux -> -> # *U &U _angles `ui `ux ( _getAngle (1 -> -> 2 `i `uc = *U + &U _angles * -> -> -> 3 `i `ui `ux -> -> # *U &U _angles `ui `ux ( _getAngle (1 -> -> 3 `i `uc ]
"145
[; ;arm_fsm.c: 145:             move_servo_to_int(angles);
[e ( _move_servo_to_int (1 -> &U _angles `*Cus ]
"146
[; ;arm_fsm.c: 146:             next_state = MOVE_UP_BOARD;
[e = _next_state . `E36 8 ]
"147
[; ;arm_fsm.c: 147:             break;
[e $U 13  ]
"148
[; ;arm_fsm.c: 148:         }
}
"150
[; ;arm_fsm.c: 150:         case MOVE_UP_BOARD: {
[e :U 35 ]
{
"151
[; ;arm_fsm.c: 151:             uint8_t angles[4];
[v _angles `uc ~T0 @X0 -> 4 `i a ]
"152
[; ;arm_fsm.c: 152:             get_adjusted_servo_angles_up(target_x, target_y, target_orientation, angles);
[e ( _get_adjusted_servo_angles_up (4 , , , _target_x _target_y _target_orientation &U _angles ]
"153
[; ;arm_fsm.c: 153:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 -> &U _angles `*Cuc ]
"154
[; ;arm_fsm.c: 154:             switch(previous_state) {
[e $U 37  ]
{
"155
[; ;arm_fsm.c: 155:                 case BOAT_ROTATE: {
[e :U 38 ]
{
"156
[; ;arm_fsm.c: 156:                     next_state = PLACEMENT;
[e = _next_state . `E36 9 ]
"157
[; ;arm_fsm.c: 157:                     break;
[e $U 36  ]
"158
[; ;arm_fsm.c: 158:                 case WAIT: {
[e :U 39 ]
{
"159
[; ;arm_fsm.c: 159:                     next_state = STILL;
[e = _next_state . `E36 5 ]
"160
[; ;arm_fsm.c: 160:                     break;
[e $U 36  ]
"161
[; ;arm_fsm.c: 161:                     }
}
"162
[; ;arm_fsm.c: 162:                 case MAGNET_ON: {
[e :U 40 ]
{
"163
[; ;arm_fsm.c: 163:                     next_state = STILL;
[e = _next_state . `E36 5 ]
"164
[; ;arm_fsm.c: 164:                     break;
[e $U 36  ]
"165
[; ;arm_fsm.c: 165:                     }
}
"166
[; ;arm_fsm.c: 166:                 }
}
"167
[; ;arm_fsm.c: 167:             }
}
[e $U 36  ]
[e :U 37 ]
[e [\ -> _previous_state `ui , $ -> . `E36 7 `ui 38
 , $ -> . `E36 11 `ui 39
 , $ -> . `E36 3 `ui 40
 36 ]
[e :U 36 ]
"168
[; ;arm_fsm.c: 168:             break;
[e $U 13  ]
"169
[; ;arm_fsm.c: 169:         }
}
"171
[; ;arm_fsm.c: 171:         case PLACEMENT: {
[e :U 41 ]
{
"172
[; ;arm_fsm.c: 172:             uint8_t angles[4];
[v _angles `uc ~T0 @X0 -> 4 `i a ]
"173
[; ;arm_fsm.c: 173:             get_adjusted_servo_angles(target_x, target_y, target_orientation, angles);
[e ( _get_adjusted_servo_angles (4 , , , _target_x _target_y _target_orientation &U _angles ]
"174
[; ;arm_fsm.c: 174:             move_servo_to_angles(angles);
[e ( _move_servo_to_angles (1 -> &U _angles `*Cuc ]
"175
[; ;arm_fsm.c: 175:             next_state = (arm_mode == PLACE) ? MAGNET_OFF : MAGNET_ON;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 10 . `E36 3 `E36 ]
"176
[; ;arm_fsm.c: 176:             break;
[e $U 13  ]
"177
[; ;arm_fsm.c: 177:         }
}
"179
[; ;arm_fsm.c: 179:         case MAGNET_OFF: {
[e :U 42 ]
{
"180
[; ;arm_fsm.c: 180:             disableMagnet();
[e ( _disableMagnet ..  ]
"181
[; ;arm_fsm.c: 181:             start_fsm_delay();
[e ( _start_fsm_delay ..  ]
"182
[; ;arm_fsm.c: 182:             next_state = WAIT;
[e = _next_state . `E36 11 ]
"183
[; ;arm_fsm.c: 183:             break;
[e $U 13  ]
"184
[; ;arm_fsm.c: 184:         }
}
"186
[; ;arm_fsm.c: 186:         case WAIT: {
[e :U 43 ]
{
"187
[; ;arm_fsm.c: 187:             if (!delay_done) return;
[e $ ! ! != -> _delay_done `i -> 0 `i 44  ]
[e $UE 11  ]
[e :U 44 ]
"188
[; ;arm_fsm.c: 188:             switch(previous_state) {
[e $U 46  ]
{
"189
[; ;arm_fsm.c: 189:                 case MAGNET_OFF: {
[e :U 47 ]
{
"190
[; ;arm_fsm.c: 190:                     next_state = (arm_mode == PLACE) ? MOVE_UP_BOARD : MOVE_UP_DOCK;
[e = _next_state -> ? == -> _arm_mode `ui -> . `E51 0 `ui : . `E36 8 . `E36 4 `E36 ]
"191
[; ;arm_fsm.c: 191:                     break;
[e $U 45  ]
"192
[; ;arm_fsm.c: 192:                 }
}
"193
[; ;arm_fsm.c: 193:                 case STILL: {
[e :U 48 ]
{
"195
[; ;arm_fsm.c: 195:                 }
}
"196
[; ;arm_fsm.c: 196:             }
}
[e $U 45  ]
[e :U 46 ]
[e [\ -> _previous_state `ui , $ -> . `E36 10 `ui 47
 , $ -> . `E36 5 `ui 48
 45 ]
[e :U 45 ]
"197
[; ;arm_fsm.c: 197:             break;
[e $U 13  ]
"198
[; ;arm_fsm.c: 198:         }
}
"200
[; ;arm_fsm.c: 200:         case RETURN: {
[e :U 49 ]
{
[v F271 `uc ~T0 @X0 -> 4 `i s ]
[i F271
:U ..
"201
[; ;arm_fsm.c: 201:             uint8_t idle_angles[4] = {43, 45, 25, 45};
-> -> 43 `i `uc
-> -> 45 `i `uc
-> -> 25 `i `uc
-> -> 45 `i `uc
..
]
[v _idle_angles `uc ~T0 @X0 -> 4 `i a ]
[e = _idle_angles F271 ]
"202
[; ;arm_fsm.c: 202:             move_servo_to_angles(idle_angles);
[e ( _move_servo_to_angles (1 -> &U _idle_angles `*Cuc ]
"203
[; ;arm_fsm.c: 203:             next_state = IDLE;
[e = _next_state . `E36 0 ]
"204
[; ;arm_fsm.c: 204:             process_fsm = 0;
[e = _process_fsm -> -> 0 `i `a ]
"205
[; ;arm_fsm.c: 205:             break;
[e $U 13  ]
"206
[; ;arm_fsm.c: 206:             }
}
"208
[; ;arm_fsm.c: 208:         case IDLE:
[e :U 50 ]
"209
[; ;arm_fsm.c: 209:         default:
[e :U 51 ]
"210
[; ;arm_fsm.c: 210:             break;
[e $U 13  ]
"211
[; ;arm_fsm.c: 211:     }
}
[e $U 13  ]
[e :U 14 ]
[e [\ -> _current_state `ui , $ -> . `E36 1 `ui 15
 , $ -> . `E36 2 `ui 20
 , $ -> . `E36 3 `ui 21
 , $ -> . `E36 4 `ui 22
 , $ -> . `E36 5 `ui 28
 , $ -> . `E36 6 `ui 33
 , $ -> . `E36 7 `ui 34
 , $ -> . `E36 8 `ui 35
 , $ -> . `E36 9 `ui 41
 , $ -> . `E36 10 `ui 42
 , $ -> . `E36 11 `ui 43
 , $ -> . `E36 12 `ui 49
 , $ -> . `E36 0 `ui 50
 51 ]
[e :U 13 ]
"212
[; ;arm_fsm.c: 212:     previous_state = current_state;
[e = _previous_state _current_state ]
"213
[; ;arm_fsm.c: 213:     current_state = next_state;
[e = _current_state _next_state ]
"214
[; ;arm_fsm.c: 214: }
[e :UE 11 ]
}
